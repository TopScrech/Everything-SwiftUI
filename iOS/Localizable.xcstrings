{
  "sourceLanguage" : "en",
  "strings" : {
    "" : {
      "shouldTranslate" : false
    },
    "@Environment(\\.horizontalSizeClass) lets you detect the available horizontal space class so you can adapt your layout for compact or regular widths" : {

    },
    "**Bold** ***bold italic***" : {
      "comment" : "An example of bold and italic text.",
      "isCommentAutoGenerated" : true
    },
    "%lf days ago" : {

    },
    "%lld days ago" : {
      "localizations" : {
        "en" : {
          "variations" : {
            "plural" : {
              "one" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld day ago"
                }
              },
              "other" : {
                "stringUnit" : {
                  "state" : "new",
                  "value" : "%lld days ago"
                }
              }
            }
          }
        },
        "ru" : {
          "variations" : {
            "plural" : {
              "few" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld дня назад"
                }
              },
              "many" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld дней назад"
                }
              },
              "one" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld день назад"
                }
              },
              "other" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld дня назад"
                }
              }
            }
          }
        }
      }
    },
    "%lldpt" : {
      "shouldTranslate" : false
    },
    "`Monospaced`" : {
      "comment" : "A code snippet with a monospaced font.",
      "isCommentAutoGenerated" : true
    },
    "~~Strikethrough~~" : {
      "comment" : "A description of a strikethrough markdown element.",
      "isCommentAutoGenerated" : true
    },
    "⚠️ Keep in mind that a Spacer has a minimum length %@ equal to 0 by default" : {
      "comment" : "A warning message about the default behavior of a Spacer.",
      "isCommentAutoGenerated" : true
    },
    "⚠️ Make sure to choose available symbols for your minimum target version" : {
      "comment" : "A warning label to remind the user to choose available symbols for their minimum target version.",
      "isCommentAutoGenerated" : true
    },
    "A container that enables navigation between views using a navigation bar (deprecated in iOS 16 in favor of NavigationStack)" : {
      "comment" : "A description of a view that enables navigation between views using a navigation bar, with a note that this feature has been deprecated in iOS 16 in favor of `NavigationStack`.",
      "isCommentAutoGenerated" : true
    },
    "A Link opens a specified URL in the user’s default browser or associated app" : {
      "comment" : "A description of how a link can open a URL in a user's default browser or app.",
      "isCommentAutoGenerated" : true
    },
    "A modern container for managing a stack of views with programmatic navigation" : {
      "comment" : "A description of the `NavigationStack` view.",
      "isCommentAutoGenerated" : true
    },
    "A popover displays a small, dismissible view anchored to another view, commonly used for contextual information or actions" : {
      "comment" : "A description of what a popover is.",
      "isCommentAutoGenerated" : true
    },
    "A sheet presents a modal view over the current screen, often used for settings or secondary content" : {
      "comment" : "A description of what a sheet is.",
      "isCommentAutoGenerated" : true
    },
    "accessoryCircular" : {

    },
    "accessoryCircularCapacity" : {

    },
    "accessoryLinear" : {

    },
    "accessoryLinearCapacity" : {

    },
    "Add all to favorites" : {
      "comment" : "A button label to add all topics to the favorites list.",
      "isCommentAutoGenerated" : true
    },
    "All code blocks" : {
      "comment" : "A navigation link that lists all code blocks.",
      "isCommentAutoGenerated" : true
    },
    "App Store Overlay" : {

    },
    "Arranges views horizontally in a single row" : {
      "comment" : "A description of how `VStack` arranges views.",
      "isCommentAutoGenerated" : true
    },
    "Arranges views in a horizontal grid, also loading items lazily to optimize performance" : {
      "comment" : "A description of how `LazyHGrid` works.",
      "isCommentAutoGenerated" : true
    },
    "Arranges views in a vertical grid, loading items only as they appear on screen for better performance" : {
      "comment" : "A description of how `LazyVGrid` works.",
      "isCommentAutoGenerated" : true
    },
    "Arranges views vertically in a single column" : {
      "comment" : "A description of how `VStack` arranges its children vertically.",
      "isCommentAutoGenerated" : true
    },
    "Bundle.main.preferredLocalizations returns the app’s preferred language codes, which you can use to adjust content or behavior based on the user’s locale" : {
      "comment" : "A description of how to retrieve the user's preferred language codes in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Button" : {
      "comment" : "A button in the menu.",
      "isCommentAutoGenerated" : true
    },
    "Button is a UI element that allows users to trigger an action when tapped" : {
      "comment" : "A description of a button UI element.",
      "isCommentAutoGenerated" : true
    },
    "C" : {

    },
    "Categories" : {

    },
    "Change badge number to %lld" : {
      "comment" : "A button that changes the badge number.",
      "isCommentAutoGenerated" : true
    },
    "Check the app icon on the home screen" : {
      "comment" : "A step instruction for users to check the app icon on their home screen after changing the badge number.",
      "isCommentAutoGenerated" : true
    },
    "Choose a category" : {

    },
    "Choose a topic" : {
      "comment" : "The default navigation title when no topic is selected.",
      "isCommentAutoGenerated" : true
    },
    "Choose your navigation experience" : {

    },
    "Collections" : {

    },
    "Color" : {
      "comment" : "A heading for a topic about color.",
      "isCommentAutoGenerated" : true
    },
    "Color theme" : {
      "comment" : "A label for the color theme setting in the settings menu.",
      "isCommentAutoGenerated" : true
    },
    "Coming soon..." : {
      "comment" : "A placeholder text added to indicate that a feature is not yet available.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Скоро…"
          }
        }
      }
    },
    "Conditional compilation checks let you run different code depending on the platform or environment your app is built for" : {
      "comment" : "A description of conditional compilation checks in Swift.",
      "isCommentAutoGenerated" : true
    },
    "Content" : {

    },
    "Context Menu allows displaying a menu of actions when a user holds a specific element where .contextMenu was applied" : {
      "comment" : "A description of the `.contextMenu` modifier in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Continue" : {

    },
    "Control" : {

    },
    "Control button that navigates to a destination view when tapped" : {
      "comment" : "A description of a control button that, when tapped, navigates to another view.",
      "isCommentAutoGenerated" : true
    },
    "Copy" : {
      "comment" : "A menu item to copy a link to the context menu of a `TopicDocsCard` view.",
      "isCommentAutoGenerated" : true
    },
    "Custom Label" : {
      "comment" : "Label for a button that allows users to trigger an action when tapped.",
      "isCommentAutoGenerated" : true
    },
    "Dark" : {
      "comment" : "Text used to describe the dark color theme.",
      "isCommentAutoGenerated" : true
    },
    "Debug" : {
      "comment" : "A debug section in the settings view.",
      "isCommentAutoGenerated" : true
    },
    "Design" : {
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Дизайн"
          }
        }
      }
    },
    "Detecting Low Power Mode helps conserve energy and maintain a smooth user experience when the battery is low. SwiftUI apps can adjust behavior by disabling power-intensive features to align with system energy-saving goals" : {
      "comment" : "A description of how `isLowPowerModeEnabled` helps the system conserve energy.",
      "isCommentAutoGenerated" : true
    },
    "Detecting the OS version involves using #available to check if the current version is x or higher, allowing conditional code execution based on the platform's capabilities" : {
      "comment" : "A brief explanation of how to detect the operating system version in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Dismiss" : {
      "comment" : "A button that dismisses a view.",
      "isCommentAutoGenerated" : true
    },
    "Displays a multi-column interface for navigating between primary and detail content, often used on iPad and Mac" : {
      "comment" : "A description of the functionality of the `NavigationSplitView`.",
      "isCommentAutoGenerated" : true
    },
    "Divider() in SwiftUI adds a visual line to separate content, helping structure your UI clearly. It’s especially useful in stacks and lists to improve readability and visual grouping" : {

    },
    "Docs" : {
      "comment" : "The title of a section that displays documentation links.",
      "isCommentAutoGenerated" : true
    },
    "Documentation" : {
      "comment" : "Title for a section of documentation.",
      "extractionState" : "stale",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Documentatie"
          }
        },
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Документация"
          }
        }
      }
    },
    "Drag & Drop" : {

    },
    "EmptyView is a built-in SwiftUI type that renders nothing in the view hierarchy. It’s useful for placeholder logic or conditional rendering when no UI should be shown" : {
      "comment" : "A description of the EmptyView in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Favorite" : {
      "comment" : "A button label to favorite a topic.",
      "isCommentAutoGenerated" : true
    },
    "Favorites" : {
      "comment" : "A section header in the list of topics, displaying a collection of the user's favorite topics.",
      "isCommentAutoGenerated" : true
    },
    "GeometryReader provides the size and position of its container, allowing you to create layouts that adapt to available space" : {
      "comment" : "An explanation of what a `GeometryReader` is and how it can be used.",
      "isCommentAutoGenerated" : true
    },
    "Grid arranges views in rows and columns, giving you flexible control over layout without lazy loading" : {
      "comment" : "A description of how the `TopicGrid` view arranges its child views.",
      "isCommentAutoGenerated" : true
    },
    "Hide native back button" : {
      "comment" : "Label for a toggle that hides the native back button in a navigation bar.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Скрыть кнопку “назад”"
          }
        }
      }
    },
    "Highlight" : {

    },
    "Image is used to display visual content such as icons, photo's, or system-provided images" : {
      "comment" : "A description of the `Image` view in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Image Picker" : {

    },
    "In SwiftUI, you can present an alert by using the .alert modifier, which displays an alert with a title, message, and optional actions when the button is tapped" : {
      "comment" : "A description of how to present an alert in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Layout" : {

    },
    "Lift" : {

    },
    "Light" : {
      "comment" : "The name of the light color theme.",
      "isCommentAutoGenerated" : true
    },
    "Linear ProgressView" : {
      "comment" : "A title for a linear progress view.",
      "isCommentAutoGenerated" : true
    },
    "linearCapacity" : {

    },
    "Link" : {
      "comment" : "A label describing a link.",
      "isCommentAutoGenerated" : true
    },
    "Link: [click](https://topscrech.dev)" : {
      "comment" : "A link example in Markdown syntax.",
      "isCommentAutoGenerated" : true
    },
    "List displays a scrollable lazy collection of rows that can contain static or dynamic content" : {
      "comment" : "A description of a list view.",
      "isCommentAutoGenerated" : true
    },
    "Low Power Mode disabled" : {
      "comment" : "A message indicating that Low Power Mode is currently disabled.",
      "isCommentAutoGenerated" : true
    },
    "Low Power Mode enabled" : {
      "comment" : "A message indicating that Low Power Mode is currently enabled.",
      "isCommentAutoGenerated" : true
    },
    "Markdown" : {

    },
    "Menu" : {
      "comment" : "Title of a button in the Menu topic view.",
      "isCommentAutoGenerated" : true
    },
    "Menu provides a customizable, collapsible list of options for user interaction" : {
      "comment" : "A brief description of the `Menu` control.",
      "isCommentAutoGenerated" : true
    },
    "Nav mode" : {
      "comment" : "A button that allows switching between different navigation modes.",
      "isCommentAutoGenerated" : true
    },
    "Navigation" : {
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Навигация"
          }
        }
      }
    },
    "No favorites found" : {
      "comment" : "A message shown when no favorites are found.",
      "isCommentAutoGenerated" : true
    },
    "not" : {
      "comment" : "A non-translatable word used to emphasize that a condition is not true.",
      "isCommentAutoGenerated" : true
    },
    "Open Settings" : {
      "comment" : "A button to open the app's settings.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Открыть Настройки"
          }
        }
      }
    },
    "Overlays views on top of each other along the z-axis" : {
      "comment" : "A description of how to use the `ZStack` view in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Placeholder" : {
      "comment" : "A placeholder text for a `TextField`.",
      "isCommentAutoGenerated" : true
    },
    "Present" : {

    },
    "Present a sheet" : {
      "comment" : "Label for a button that presents a sheet.",
      "isCommentAutoGenerated" : true
    },
    "ProgressView with a title" : {
      "comment" : "A title for a `ProgressView`.",
      "isCommentAutoGenerated" : true
    },
    "Purple" : {
      "comment" : "A label displayed above a toggle with a purple color.",
      "isCommentAutoGenerated" : true
    },
    "Regular text" : {
      "comment" : "Regular text displayed in a Markdown view.",
      "isCommentAutoGenerated" : true
    },
    "Related Topics" : {
      "comment" : "A heading displayed under the list of related recipes.",
      "isCommentAutoGenerated" : true
    },
    "Remove all favorites" : {
      "comment" : "A button label to remove all favorite topics.",
      "isCommentAutoGenerated" : true
    },
    "ScrollView allows content to be scrolled horizontally or vertically when it doesn’t fit within the available space" : {
      "comment" : "A description of a scroll view in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Setting .frame(maxWidth: .infinity) makes views expand equally within their container, ensuring consistent sizing across items" : {
      "comment" : "A description of how to ensure that views within a container are sized consistently.",
      "isCommentAutoGenerated" : true
    },
    "Settings" : {
      "comment" : "A title for the settings screen.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Instellingen"
          }
        },
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Настройки"
          }
        }
      }
    },
    "SF Symbols provide a convenient and modern way to incorporate Apple's icons into your app, enhancing user experience with intuitive and visually appealing designs. These icons support localization and animations" : {

    },
    "Shapes let you easily create custom graphics like circles & rectangles directly in code. They can be styled, scaled, and animated to build unique and dynamic UI elements" : {
      "comment" : "A description of how to use SwiftUI's `Shape` view.",
      "isCommentAutoGenerated" : true
    },
    "Sheet" : {
      "comment" : "A label used in a code block to describe a sheet view.",
      "isCommentAutoGenerated" : true
    },
    "Show code line numbers" : {
      "comment" : "A label for a toggle switch that controls whether line numbers are shown in code views.",
      "isCommentAutoGenerated" : true
    },
    "Show status bar" : {
      "comment" : "A toggle to show or hide the status bar.",
      "isCommentAutoGenerated" : true
    },
    "Simple Spacer" : {
      "comment" : "A title for a code block showing how to use a `Spacer` with a default minimum length.",
      "isCommentAutoGenerated" : true
    },
    "Slider is a customizable UI control that allows users to select a value from a continuous range" : {
      "comment" : "A description of a slider UI control.",
      "isCommentAutoGenerated" : true
    },
    "Spacer with a fixed size" : {
      "comment" : "A code block showing how to use a Spacer with a fixed size.",
      "isCommentAutoGenerated" : true
    },
    "Spacer with a minimum size" : {
      "comment" : "A heading for a section that discusses the use of the `Spacer` view with a minimum size.",
      "isCommentAutoGenerated" : true
    },
    "Spacer() is an element that takes up as much space as it can in a layout" : {
      "comment" : "A description of the Spacer view in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Stack" : {

    },
    "Stepper is a customizable slider control that allows to select a value from a range, providing a simple and intuitive way to adjust settings or display progress" : {
      "comment" : "A description of the Stepper control.",
      "isCommentAutoGenerated" : true
    },
    "Style" : {
      "comment" : "A label used in a group of controls to indicate their appearance.",
      "isCommentAutoGenerated" : true
    },
    "Style Details" : {
      "comment" : "Heading for a section that details the styling options for toggles.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI Color is a type that represents a color in a way that is easy to use and integrate into SwiftUI views" : {
      "comment" : "A description of `SwiftUI.Color`.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI Gradient allows you to create visually appealing, smooth transitions between colors across a shape or area in your user interface" : {
      "comment" : "A description of SwiftUI Gradient.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI lets you pass a view into another view by storing it as a property, often using AnyView to handle different view types. This makes it easy to reuse layouts while swapping the displayed content" : {
      "comment" : "An explanation of how to pass a view into another view using SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI's `TextEditor` allows users to enter or edit multi-line text. It supports rich formatting and large content inputs" : {
      "comment" : "A description of the `TextEditor` control in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI's Picker is a customizable, interactive way allowing users to select from a list of options" : {
      "comment" : "A description of the `Picker` control in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI's TextField is a fundamental UI component used to allow users to input or edit single-line text" : {
      "comment" : "A brief explanation of the TextField UI component in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "System" : {
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Systeem"
          }
        }
      }
    },
    "TabView lets you switch between multiple views using a tab bar interface" : {
      "comment" : "A description of the TabView SwiftUI view.",
      "isCommentAutoGenerated" : true
    },
    "Text is a SwiftUI element used to display static or dynamic strings in the interface. It supports rich formatting, localization, and adapts to system-wide accessibility settings" : {
      "comment" : "A brief explanation of the Text SwiftUI element.",
      "isCommentAutoGenerated" : true
    },
    "The .frame() modifier sets a view’s size, with options for fixed or flexible minimum, ideal, and maximum dimensions along with alignment" : {

    },
    "The .padding() modifier adds space around a view, and can be customized by size, edges, or both to control layout spacing" : {

    },
    "The .preferredColorScheme(_:) modifier forces a view to display in a specific color scheme, regardless of the system setting" : {

    },
    "The @Environment(\\.colorScheme) property lets you detect whether the system is in light or dark mode so you can adjust your UI accordingly" : {

    },
    "The App Store overlay lets you promote an app that’s already published on the App Store and even trigger updates for it" : {
      "comment" : "A description of the `AppStoreOverlay` view.",
      "isCommentAutoGenerated" : true
    },
    "The Label view combines text with an icon, which can come from SF Symbols, your asset catalog, or a fully custom view, and can be styled with different label styles" : {
      "comment" : "A description of a `TopicLabel` view.",
      "isCommentAutoGenerated" : true
    },
    "The top bar in a navigation container that can show titles, buttons, and other controls" : {
      "comment" : "A description of a navigation bar in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "To dismiss a sheet before ios 15, there is a change to make only in the sheet content" : {
      "comment" : "A note for users dismissing a sheet before iOS 15, indicating that the dismissal logic should be applied within the sheet's content.",
      "isCommentAutoGenerated" : true
    },
    "Toggle" : {
      "comment" : "A label for a toggle control.",
      "isCommentAutoGenerated" : true
    },
    "Toggle lets users switch a value on or off, and can be bound to a state property to update your UI automatically" : {
      "comment" : "A description of the Toggle control, highlighting its functionality and how it can be integrated into a SwiftUI view.",
      "isCommentAutoGenerated" : true
    },
    "Topics" : {
      "comment" : "A tab bar item label in the app's main view.",
      "isCommentAutoGenerated" : true
    },
    "Two columns" : {
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Twee kolommen"
          }
        }
      }
    },
    "UIDevice.current.userInterfaceIdiom returns the type of device your app is running on, allowing you to adjust the UI for different platforms" : {
      "comment" : "A description of how to use `UIDevice.current.userInterfaceIdiom` to determine the type of device a user is using.",
      "isCommentAutoGenerated" : true
    },
    "UIScreen.main.bounds gives you the screen’s width and height, which you can use to size views dynamically" : {
      "comment" : "An explanation of how to use `UIScreen.main.bounds` to dynamically size views.",
      "isCommentAutoGenerated" : true
    },
    "Undo favorite" : {
      "comment" : "A label to undo favoriting a topic.",
      "isCommentAutoGenerated" : true
    },
    "Usage with AnyView" : {
      "comment" : "A heading used in the documentation to describe how to use `EmptyView` when combined with `AnyView`.",
      "isCommentAutoGenerated" : true
    },
    "Use built-in Safari" : {
      "comment" : "A setting to enable or disable using Safari as the web browser.",
      "isCommentAutoGenerated" : true
    },
    "View" : {

    },
    "When using a function that returns AnyView via a switch statement, EmptyView() is a convenient and concise default case. It avoids unnecessary layout calculations while still satisfying the return type" : {

    }
  },
  "version" : "1.1"
}