{
  "sourceLanguage" : "en",
  "strings" : {
    "" : {
      "shouldTranslate" : false
    },
    "%lf days ago" : {

    },
    "%lld days ago" : {
      "localizations" : {
        "en" : {
          "variations" : {
            "plural" : {
              "one" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld day ago"
                }
              },
              "other" : {
                "stringUnit" : {
                  "state" : "new",
                  "value" : "%lld days ago"
                }
              }
            }
          }
        },
        "ru" : {
          "variations" : {
            "plural" : {
              "few" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld дня назад"
                }
              },
              "many" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld дней назад"
                }
              },
              "one" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld день назад"
                }
              },
              "other" : {
                "stringUnit" : {
                  "state" : "translated",
                  "value" : "%lld дня назад"
                }
              }
            }
          }
        }
      }
    },
    "%lldpt" : {
      "shouldTranslate" : false
    },
    "`Monospaced works too`" : {

    },
    "~~A strikethrough example~~" : {

    },
    "⚠️ Keep in mind that a Spacer has a minimum length %@ equal to 0 by default" : {
      "comment" : "A warning message about the default behavior of a Spacer.",
      "isCommentAutoGenerated" : true
    },
    "accessoryCircular" : {

    },
    "accessoryCircularCapacity" : {

    },
    "accessoryLinear" : {

    },
    "accessoryLinearCapacity" : {

    },
    "App Store Overlay" : {

    },
    "Button is a UI element that allows users to trigger an action when tapped" : {
      "comment" : "A description of a button UI element.",
      "isCommentAutoGenerated" : true
    },
    "C" : {

    },
    "Categories" : {

    },
    "Change badge number to %lld" : {
      "comment" : "A button that changes the badge number.",
      "isCommentAutoGenerated" : true
    },
    "Check the app icon on the home screen" : {
      "comment" : "A step instruction for users to check the app icon on their home screen after changing the badge number.",
      "isCommentAutoGenerated" : true
    },
    "Choose a category" : {

    },
    "Choose a topic" : {
      "comment" : "The default navigation title when no topic is selected.",
      "isCommentAutoGenerated" : true
    },
    "Choose your navigation experience" : {

    },
    "Collections" : {

    },
    "Color" : {
      "comment" : "A heading for a topic about color.",
      "isCommentAutoGenerated" : true
    },
    "Color theme" : {
      "comment" : "A label for the color theme setting in the settings menu.",
      "isCommentAutoGenerated" : true
    },
    "Coming soon..." : {
      "comment" : "A placeholder text added to indicate that a feature is not yet available.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Скоро…"
          }
        }
      }
    },
    "Content" : {

    },
    "Context Menu allows displaying a menu of actions when a user holds a specific element where .contextMenu was applied" : {
      "comment" : "A description of the `.contextMenu` modifier in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Continue" : {

    },
    "Control" : {

    },
    "Copy" : {
      "comment" : "A menu item to copy a link to the context menu of a `TopicDocsCard` view.",
      "isCommentAutoGenerated" : true
    },
    "Custom Label" : {
      "comment" : "Label for a button that allows users to trigger an action when tapped.",
      "isCommentAutoGenerated" : true
    },
    "Dark" : {
      "comment" : "Text used to describe the dark color theme.",
      "isCommentAutoGenerated" : true
    },
    "Debug" : {
      "comment" : "A debug section in the settings view.",
      "isCommentAutoGenerated" : true
    },
    "Design" : {
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Дизайн"
          }
        }
      }
    },
    "Detect language" : {
      "comment" : "A title that indicates the purpose of the view.",
      "isCommentAutoGenerated" : true
    },
    "Detecting Low Power Mode helps conserve energy and maintain a smooth user experience when the battery is low. SwiftUI apps can adjust behavior by disabling power-intensive features to align with system energy-saving goals" : {
      "comment" : "A description of how `isLowPowerModeEnabled` helps the system conserve energy.",
      "isCommentAutoGenerated" : true
    },
    "Detecting the OS version involves using #available to check if the current version is x or higher, allowing conditional code execution based on the platform's capabilities" : {
      "comment" : "A brief explanation of how to detect the operating system version in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Dismiss" : {
      "comment" : "A button that dismisses a view.",
      "isCommentAutoGenerated" : true
    },
    "Divider() in SwiftUI adds a visual line to separate content, helping structure your UI clearly. It’s especially useful in stacks and lists to improve readability and visual grouping" : {

    },
    "Docs" : {
      "comment" : "The title of a section that displays documentation links.",
      "isCommentAutoGenerated" : true
    },
    "Documentation" : {
      "comment" : "Title for a section of documentation.",
      "extractionState" : "stale",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Documentatie"
          }
        },
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Документация"
          }
        }
      }
    },
    "Drag & Drop" : {

    },
    "EmptyView is a built-in SwiftUI type that renders nothing in the view hierarchy. It’s useful for placeholder logic or conditional rendering when no UI should be shown" : {
      "comment" : "A description of the EmptyView in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Favorite" : {
      "comment" : "A button label to favorite a topic.",
      "isCommentAutoGenerated" : true
    },
    "Favorites" : {
      "comment" : "A section header in the list of topics, displaying a collection of the user's favorite topics.",
      "isCommentAutoGenerated" : true
    },
    "GoidaGoida" : {
      "comment" : "A line of text with a limited number of lines.",
      "isCommentAutoGenerated" : true,
      "shouldTranslate" : false
    },
    "Hide native back button" : {
      "comment" : "Label for a toggle that hides the native back button in a navigation bar.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Скрыть кнопку “назад”"
          }
        }
      }
    },
    "Highlight" : {

    },
    "Image is used to display visual content such as icons, photo's, or system-provided images" : {
      "comment" : "A description of the `Image` view in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Image Picker" : {

    },
    "In SwiftUI, you can present an alert by using the .alert modifier, which displays an alert with a title, message, and optional actions when the button is tapped" : {
      "comment" : "A description of how to present an alert in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Layout" : {

    },
    "Lift" : {

    },
    "Light" : {
      "comment" : "The name of the light color theme.",
      "isCommentAutoGenerated" : true
    },
    "Linear ProgressView" : {
      "comment" : "A title for a linear progress view.",
      "isCommentAutoGenerated" : true
    },
    "linearCapacity" : {

    },
    "Link: [click](https://topscrech.dev)" : {
      "comment" : "A link example in Markdown syntax.",
      "isCommentAutoGenerated" : true
    },
    "Low Power Mode disabled" : {
      "comment" : "A message indicating that Low Power Mode is currently disabled.",
      "isCommentAutoGenerated" : true
    },
    "Low Power Mode enabled" : {
      "comment" : "A message indicating that Low Power Mode is currently enabled.",
      "isCommentAutoGenerated" : true
    },
    "Markdown" : {

    },
    "Menu provides a customizable, collapsible list of options for user interaction" : {
      "comment" : "A brief description of the `Menu` control.",
      "isCommentAutoGenerated" : true
    },
    "Nav mode" : {
      "comment" : "A button that allows switching between different navigation modes.",
      "isCommentAutoGenerated" : true
    },
    "Navigation" : {
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Навигация"
          }
        }
      }
    },
    "No favorites found" : {
      "comment" : "A message shown when no favorites are found.",
      "isCommentAutoGenerated" : true
    },
    "not" : {
      "comment" : "A non-translatable word used to emphasize that a condition is not true.",
      "isCommentAutoGenerated" : true
    },
    "Open Settings" : {
      "comment" : "A button to open the app's settings.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Открыть Настройки"
          }
        }
      }
    },
    "Placeholder" : {
      "comment" : "A placeholder text for a `TextField`.",
      "isCommentAutoGenerated" : true
    },
    "Present" : {

    },
    "ProgressView with a title" : {
      "comment" : "A title for a `ProgressView`.",
      "isCommentAutoGenerated" : true
    },
    "Purple" : {
      "comment" : "A label displayed above a toggle with a purple color.",
      "isCommentAutoGenerated" : true
    },
    "Related Topics" : {
      "comment" : "A heading displayed under the list of related recipes.",
      "isCommentAutoGenerated" : true
    },
    "Remove all favorites" : {
      "comment" : "A button label to remove all favorite topics.",
      "isCommentAutoGenerated" : true
    },
    "Settings" : {
      "comment" : "A title for the settings screen.",
      "isCommentAutoGenerated" : true,
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Instellingen"
          }
        },
        "ru" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Настройки"
          }
        }
      }
    },
    "Sheet" : {
      "comment" : "A label used in a code block to describe a sheet view.",
      "isCommentAutoGenerated" : true
    },
    "Show code line numbers" : {
      "comment" : "A label for a toggle switch that controls whether line numbers are shown in code views.",
      "isCommentAutoGenerated" : true
    },
    "Show status bar" : {
      "comment" : "A toggle to show or hide the status bar.",
      "isCommentAutoGenerated" : true
    },
    "Simple Spacer" : {
      "comment" : "A title for a code block showing how to use a `Spacer` with a default minimum length.",
      "isCommentAutoGenerated" : true
    },
    "Slider is a customizable UI control that allows users to select a value from a continuous range" : {
      "comment" : "A description of a slider UI control.",
      "isCommentAutoGenerated" : true
    },
    "Spacer with a fixed size" : {
      "comment" : "A code block showing how to use a Spacer with a fixed size.",
      "isCommentAutoGenerated" : true
    },
    "Spacer with a minimum size" : {
      "comment" : "A heading for a section that discusses the use of the `Spacer` view with a minimum size.",
      "isCommentAutoGenerated" : true
    },
    "Spacer() is an element that takes up as much space as it can in a layout" : {
      "comment" : "A description of the Spacer view in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "Stack" : {

    },
    "Stepper is a customizable slider control that allows to select a value from a range, providing a simple and intuitive way to adjust settings or display progress" : {
      "comment" : "A description of the Stepper control.",
      "isCommentAutoGenerated" : true
    },
    "Style" : {
      "comment" : "A label used in a group of controls to indicate their appearance.",
      "isCommentAutoGenerated" : true
    },
    "Style Details" : {
      "comment" : "Heading for a section that details the styling options for toggles.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI Color is a type that represents a color in a way that is easy to use and integrate into SwiftUI views" : {
      "comment" : "A description of `SwiftUI.Color`.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI Gradient allows you to create visually appealing, smooth transitions between colors across a shape or area in your user interface" : {
      "comment" : "A description of SwiftUI Gradient.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI's `TextEditor` allows users to enter or edit multi-line text. It supports rich formatting and large content inputs" : {
      "comment" : "A description of the `TextEditor` control in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI's Picker is a customizable, interactive way allowing users to select from a list of options" : {
      "comment" : "A description of the `Picker` control in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "SwiftUI's TextField is a fundamental UI component used to allow users to input or edit single-line text" : {
      "comment" : "A brief explanation of the TextField UI component in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "System" : {
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Systeem"
          }
        }
      }
    },
    "Text is a SwiftUI element used to display static or dynamic strings in the interface. It supports rich formatting, localization, and adapts to system-wide accessibility settings" : {
      "comment" : "A brief explanation of the Text SwiftUI element.",
      "isCommentAutoGenerated" : true
    },
    "The App Store overlay lets you promote an app that’s already published on the App Store and even trigger updates for it" : {
      "comment" : "A description of the `AppStoreOverlay` view.",
      "isCommentAutoGenerated" : true
    },
    "The ContentView struct uses the @Environment(\\.colorScheme) property wrapper to access the current color scheme environment variable, which determines whether the app is in Dark or Light mode" : {
      "comment" : "A description of how to access the current color scheme in SwiftUI.",
      "isCommentAutoGenerated" : true
    },
    "This is **bold** text, this is *italic* text, and this is ***bold, italic*** text" : {
      "comment" : "A sample text with multiple formatting styles.",
      "isCommentAutoGenerated" : true
    },
    "This is regular text" : {
      "comment" : "A sample line of text without any formatting.",
      "isCommentAutoGenerated" : true
    },
    "To dismiss a sheet before ios 15, there is a change to make only in the sheet content" : {
      "comment" : "A note for users dismissing a sheet before iOS 15, indicating that the dismissal logic should be applied within the sheet's content.",
      "isCommentAutoGenerated" : true
    },
    "Toggle" : {
      "comment" : "A label for a toggle control.",
      "isCommentAutoGenerated" : true
    },
    "TopicCustomKeyboard" : {
      "comment" : "A placeholder text for a view.",
      "isCommentAutoGenerated" : true
    },
    "TopicLabel" : {
      "comment" : "A placeholder text for a view representing a topic.",
      "isCommentAutoGenerated" : true
    },
    "TopicPopover" : {
      "comment" : "A placeholder text for the view.",
      "isCommentAutoGenerated" : true
    },
    "Topics" : {
      "comment" : "A tab bar item label in the app's main view.",
      "isCommentAutoGenerated" : true
    },
    "TopicSFSymbols" : {
      "comment" : "A title for a view that showcases different `SFSymbol` names.",
      "isCommentAutoGenerated" : true
    },
    "TopicShape" : {
      "comment" : "A placeholder text for a view.",
      "isCommentAutoGenerated" : true
    },
    "Two columns" : {
      "localizations" : {
        "nl" : {
          "stringUnit" : {
            "state" : "translated",
            "value" : "Twee kolommen"
          }
        }
      }
    },
    "Undo favorite" : {
      "comment" : "A label to undo favoriting a topic.",
      "isCommentAutoGenerated" : true
    },
    "Usage with AnyView" : {
      "comment" : "A heading used in the documentation to describe how to use `EmptyView` when combined with `AnyView`.",
      "isCommentAutoGenerated" : true
    },
    "View" : {

    },
    "When using a function that returns AnyView via a switch statement, EmptyView() is a convenient and concise default case. It avoids unnecessary layout calculations while still satisfying the return type" : {

    }
  },
  "version" : "1.1"
}